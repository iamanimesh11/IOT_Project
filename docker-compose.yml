services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    networks:
      - my_custom_network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: animesh11
      POSTGRES_DB: de_personal
    healthcheck:  # âœ… Ensure PostgreSQL is ready before Airflow starts
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
      timeout: 3s
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./shared:/shared
      - ./config/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./config:/app/config # Mount the config directory containing db_initialize.sh

 
  streamlit:
    build: ./common/streamlit
    container_name: streamlit2
    networks:
      - my_custom_network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "8501:8501"
      - "2375:2375"  # Expose Docker port

 
    environment:
      - KAFKA_BROKER=kafka:9092
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Add this line to mount the Docker socket
      - ./common/streamlit:/app  # Mounts the local "streamlit" folder into the container
      - ./shared:/shared  

    command: ["streamlit", "run", "PostgreSQL_streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.runOnSave=true"]

  mosquitto:
      image: eclipse-mosquitto:2
      ports:
        - "1883:1883"    # MQTT
        - "9001:9001"    # WebSocket (optional)
      volumes:
        - ./mosquitto/config:/mosquitto/config
        - ./mosquitto/data:/mosquitto/data
        - ./mosquitto/log:/mosquitto/log
 
 
  redis:
    image: redis:latest
    container_name: redis-server
    networks:
      - my_custom_network
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 3s
networks:
  my_custom_network:
    driver: bridge  # Or other network driver as needed
    
    
volumes:
  postgres_data:  
  kafka_data:
  redis_data:
