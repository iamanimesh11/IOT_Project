{
    ".": [
        ".dockerignore",
        ".env",
        ".gitattributes",
        ".gitignore",
        "device_models.json",
        "docker-compose.yml",
        "Dockerfile",
        "project summary.txt",
        "README.md",
        "temp.py"
    ],
    ".idea": [
        ".gitignore",
        "material_theme_project_new.xml",
        "misc.xml",
        "modules.xml",
        "project_IOT_LG.iml",
        "vcs.xml"
    ],
    ".idea/inspectionProfiles": [
        "profiles_settings.xml",
        "Project_Default.xml"
    ],
    "additionals": [
        "backup.sqlc",
        "project_structure.json",
        "PROJECT_STRUCTURE.md",
        "project_structure_json_creator.py",
        "text_Search.py"
    ],
    "asset": [
        "workflow.gif"
    ],
    "common": [
        "__init__ copy.py",
        "__init__.py"
    ],
    "common/credentials": [
        "config.ini",
        "red-button-442617-a9-89794f0a5b90.json"
    ],
    "common/logging_and_monitoring": [
        "centralized_logging.py",
        "firebase_db_api_utils.log"
    ],
    "common/logs": [
        "loki_errors.text"
    ],
    "common/streamlit": [
        "database_logger dashboard-7-4.json",
        "Dockerfile",
        "Docker_container_Status.py",
        "Docker_running_containers_HTTP_Streamlit.py",
        "ETL_walkthrough_Streamlit.py",
        "kafka_manager_Streamlit.py",
        "lokii_streamlit.py",
        "main_Streamlit.py",
        "network_utils.py",
        "PostgreSQL_streamlit_app.py",
        "project_flow.py",
        "requirements.txt"
    ],
    "common/streamlit/images": [
        "Daasboard_1.png",
        "Grafana_guide_1.png",
        "Grafana_guide_2.png",
        "Grafana_guide_3.png"
    ],
    "common/streamlit/loki_files": [
        "log_sent _to_loki.py",
        "loki_request_python.py"
    ],
    "common/test": [
        "device_models.json",
        "readjson.py",
        "t.html",
        "temp.html",
        "tojson.py"
    ],
    "common/utils": [
        "config.ini",
        "Database_connection_Utils.py",
        "service_registration.py",
        "__init__.py"
    ],
    "common/utils/customer -database": [
        "create_kafka_topics.py",
        "Customers_Tables_Creator.py",
        "generate_customer_data.py"
    ],
    "common/utils/get-devices": [
        "dynamic_Devices_Tables_creator.py",
        "fastapi generates device data.py",
        "get-devices from fastapi.py",
        "staging_table_creation.py",
        "__init__.py"
    ],
    "common/utils/json_files": [
        "device_models.json",
        "device_profiles.json"
    ],
    "common/utils/kafka_handler": [
        "Dockerfile.kafka_controller",
        "kafka_consumer.py",
        "kafka_controller.py",
        "mock_crm.py",
        "requirements.txt",
        "webhook_receiver.py"
    ],
    "common/utils/kafka_handler/Devices_processing_logic": [
        "refrigerator_processing_logic.py"
    ],
    "common/utils/kafka_handler/templates": [
        "crm_dashboard.html"
    ],
    "common/utils/Subscription": [
        "backend_subscription_consumer.py",
        "bulk_subscribe.py",
        "Database_connection_Utils.py",
        "POST subscribe Event.py"
    ],
    "common/utils/test-mqtt": [
        "controller.py",
        "dockerfile",
        "dockerfile_consumer_and_controller",
        "generator.py",
        "mqtt_consumer.py",
        "requirements.txt",
        "__init__.py"
    ],
    "config": [
        "db_initialize.sh",
        "init-db.sql",
        "loki-config.yml",
        "loki.json",
        "promtail-config.yml",
        "wait-for-flag.sh"
    ],
    "grafana": [],
    "grafana/provisioning": [],
    "grafana/provisioning/dashboards": [
        "Airflow Log Analytics.json",
        "dashboard.yml",
        "ETL dashboard.json"
    ],
    "help notes": [
        "airflow_usage",
        "why mqtt and kafka both"
    ],
    "json_files": [
        "device_models.json"
    ],
    "mosquitto": [],
    "mosquitto/config": [
        "mosquitto.conf"
    ],
    "mosquitto/data": [],
    "mosquitto/log": [],
    "pipelines": [],
    "pipelines/airflow": [
        "airflow.cfg",
        "airflow.db",
        "Dockerfile",
        "requirements.txt",
        "webserver_config.py"
    ],
    "pipelines/airflow/dags": [
        "DAG_Monitor_ETL_health.py"
    ],
    "pipelines/kafka_files": [
        "Dockerfile",
        "Dockerfile_consumer_traffic",
        "modify_Topics.py",
        "requirements_traffic.txt",
        "road_consumer.py",
        "road_producer.py",
        "traffic_consumer.py",
        "traffic_producer.py",
        "__init__.py"
    ],
    "pythonn_dsa": [
        "1.py"
    ],
    "pythonn_dsa/sorting": [
        "bubble sort.py"
    ],
    "shared": [
        "info_collected.flag",
        "start_logged.txt",
        "user_info.json",
        "wait-for-flag.sh"
    ]
}